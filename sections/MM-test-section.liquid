<style>
    .mm-test-section{
        max-width: 680px;
        margin: auto;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 20px;
    }
    .mm-test-section .image--wrapper img{
        width: 100%;
        height: auto;
    }
    .other-styles {
        background-color: red;
    }
     #tooltip {
        background: #333;
        color: white;
        font-weight: bold;
        padding: 4px 8px;
        font-size: 13px;
        border-radius: 4px;
        display: none;
      }
      #tooltip[data-show]{
        display: block;
      }
</style>
<div class="mm-test-section">
    <div class="inner-conainer">
        <H2>{{ section.settings.mm-heading }}</H2>
        <div class="paragraph">
            {{ section.settings.mm-textcontent }}
        </div>
        {% if section.settings.mm-button-text %}
            <a href="{{ section.settings.mm-button-url }}" >
                {{ section.settings.mm-button-text }}
            </a>
        {% endif %}
        {% for block in section.blocks %}

            <h2 class="section--head">{{ block.settings.mm-subheading }}</h2>
            <div id="tooltip" role="tooltip">My tooltip</div>
        {% endfor %}
    </div>
    {% if section.settings.mm-image != blank %}
        <div class="image--wrapper">
            <img src="{{ section.settings.mm-image | img_url: "master" }}"  />
        </div>
    {% endif %}
</div>

<script src="https://unpkg.com/@popperjs/core@2"></script>
<script>
    const button = document.querySelector('.section--head');
    const tooltip = document.querySelector('#tooltip');

    const popperInstance = Popper.createPopper(button, tooltip);

    function show(){
        tooltip.setAttribute('data-show', '');
        popperInstance.update();
    }
    function hide(){
      tooltip.removeAttribute('data-show');
    }
    const showEvents = ['mouseenter', 'focus'];
    const hideEvents = ['mouseleave', 'blur'];

    showEvents.forEach((event) => {
    button.addEventListener(event, show);
    });

    hideEvents.forEach((event) => {
    button.addEventListener(event, hide);
    });

</script>
{% schema %}
{
    "name": "MM-test-section",
    "settings": [{
        "type":"text",
        "id":"mm-heading",
        "label":"Heading"
     },{
        "type":"richtext",
        "label":"Text",
        "id":"mm-textcontent"
     },{
        "type":"text",
        "id": "mm-button-text",
        "label":"Button Text"
     },{
        "type":"url",
        "id": "mm-button-url",
        "label":"Button URL"
     },{
        "type":"image_picker",
        "id":"mm-image",
        "label":"Image"
     }],
     "blocks":[{
        "type":"subheading",
        "name":"Sub Heading",
        "limit": 1,
        "settings":[{
            "type":"text",
            "id":"mm-subheading",
            "label":"Sub Heading"
        }]
     }],
    "presets": [{
        "name": "MM Test Section"
    }]
}
{% endschema %}
